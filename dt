package DT;
use Mojo::Base -base;
use Mojo::DOM;
use Mojo::Log;
use Mojo::Util 'slurp';

use File::Basename;

has log => sub { Mojo::Log->new };
has dom => sub { Mojo::DOM->new(slurp shift->_file) };

has '_file';

has 'dt';
has 'branch';

has 'title';
has 'description';

has 'prompt';
has 'options' => sub { [] };
has 'speedcode';
has 'details';

sub list_files {
  my $self = shift;
  my $home = shift;
  map { basename $_, '.xml' } grep { /\.xml$/ } @{$home->list_files};
}

sub new {
  my $self = shift->SUPER::new(@_);
  $self->_file($self->dt.".xml");
  $self->title($self->dom->at('tree > title')->text);
  $self->description($self->dom->at('tree > description')->text);
  return $self unless $self->branch;
  my $qrbranch = $self->branch;
  for my $d1 ( grep { $_->size } $self->dom->find('tree > branch')->grep(sub{$_->{id} =~ qr/^$qrbranch$/}) ) {
    if ( $d1->at('speedcode')->[0] ) {
      $self->prompt($d1->at('content')->text);
      $self->speedcode($d1->at('speedcode')->text);
      $self->details($d1->at('details')->text);
    } else {
      $self->prompt($d1->at('content')->text);
      push @{$self->options}, [$_->{target}, $_->text] for grep { $_->text } $d1->find('fork')->[0]->each;
      push @{$self->options}, [$self->pop_branch, "Back"];
    }
  }
  $self;
}

sub pop_branch { local @_ = split /\./, shift->branch; pop @_; join '.', @_ }

package main;

use Mojolicious::Lite;
use Mojo::Util qw(camelize);

plugin 'HeaderCondition';

helper spamelize => sub { shift; $_ = camelize(@_); s/::/ /; $_ };

get '/' => sub {
  my $self = shift;
  $self->render(list_files => [DT->list_files($self->app->home)]);
} => 'index';

get '/:dt/#branch' => (headers => {'X-Requested-With' => qr/XMLHttpRequest/}) => {branch => 1} => sub {
  my $self = shift;
  my ($dt, $branch) = ($self->param('dt'), $self->param('branch'));
  $dt = DT->new(dt => $dt, branch => $branch);
  $dt->prompt ? $self->render(dt => $dt) : $self->render_not_found;
} => 'dt';

app->start;

__DATA__
@@ index.html.ep
<html>
  <head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js" type="text/javascript"></script>
    <script type="text/javascript">
      var dt = function () {
        $("a.ajax[href]").each(function(){
          $(this).on("click", function(e) {
            e.preventDefault();
            $.get($(this).attr('href'), function(data){
              $("#dt").html(data);
              dt();
            });
            return false;
          });
        });
      };
      $(document).ready(function(){
        dt();
      });
    </script>
  </head>
  <body>
    <a href="<%= url_for 'index' %>">Home</a><br />
    % foreach ( sort @$list_files ) {
      <a class="ajax" href="<%= url_for 'dt', dt => $_ %>"><%= spamelize $_ %></a><br />
    % }
    <hr />
    <div id="dt"></div>
  </body>
  <body>
  </body>
</html>

@@ dt.html.ep
<h1><%= $dt->title %></h1>
<h2><%= $dt->description %></h2>
<hr>
% if ( $dt->speedcode ) {
  <table>
    <tr><td><b>Action / Resolution:<b></td><td><%= $dt->prompt %></td></tr>
    <tr><td><b>Select speedcode:</b></td><td><%= $dt->speedcode %></td></tr>
    <tr><td><b>CnP these details into your ticket details:</b></td><td><%= $dt->description %></td></tr>
  </table>
% } else {
  % if ( $dt->prompt ) {
    <b>(<%= $dt->branch %>) <%= $dt->prompt %></b><br />
    <ul>
    % my $back = pop @{$dt->options};
    % for ( @{$dt->options} ) {
      <li><a class="ajax" href="<%= url_for 'dt', dt => $dt->dt, branch => $_->[0] %>"><%= $_->[1] %><br />
    % }
    % if ( $back->[0] ) {
      <li><a class="ajax" href="<%= url_for 'dt', dt => $dt->dt, branch => $back->[0] %>"><%= $back->[1] %><br />
    % }
    </ul>
  % } else {
    What?<br />
  % }
% }
